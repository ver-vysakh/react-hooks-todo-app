{"version":3,"sources":["context/ToDoContext.js","components/Header.js","components/ToDo.js","components/ToDoList.js","components/ToDoForm.js","components/App.js","reportWebVitals.js","index.js"],"names":["ToDoContext","React","createContext","ToDoProvider","props","useState","isModalVisible","setIsModalVisible","taskDeleteId","setTaskDeleteId","data","toDoList","setToDoList","length","currentIndex","setCurrentIndex","Provider","value","showModal","id","handleOk","handleCancel","handleToggle","mapped","map","task","Number","complete","handleFilter","filtered","filter","addTask","userInput","copy","getTask","find","updateTask","deleteTask","remainingTask","children","Header","className","ToDo","todo","uniqueKey","useContext","name","onClick","e","preventDefault","currentTarget","to","EditOutlined","title","DeleteOutlined","ToDoList","isDisabled","some","item","index","Fragment","disabled","type","ToDoForm","setUserInput","handle","useParams","history","useHistory","useEffect","reset","push","handleSubmit","error","message","onSubmit","onChange","placeholder","App","basename","process","path","visible","onOk","onCancel","ExclamationCircleOutlined","style","fontSize","color","marginRight","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"yVAGMA,EAAcC,IAAMC,gBAyFXC,EAvFM,SAACC,GAElB,MAA4CC,oBAAS,GAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAAwCF,mBAAS,MAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAgCJ,mBAASK,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAwCP,mBAASM,EAASE,OAAO,GAAjE,mBAAOC,EAAP,KAAqBC,EAArB,KA2DA,OACI,cAACf,EAAYgB,SAAb,CACEC,MAAO,CACHX,eAAgBA,EAChBK,SAAUA,EACVH,aAAcA,EACdU,UAnBQ,SAACC,GACjBV,EAAgBU,GAChBZ,GAAkB,IAkBVa,SAfO,WACfb,GAAkB,IAeVc,aAZW,WACnBd,GAAkB,IAYVe,aAlEW,SAACH,GACpB,IAAII,EAASZ,EAASa,KAAI,SAACC,GACzB,OAAOA,EAAKN,KAAOO,OAAOP,GAAnB,2BACEM,GADF,IACQE,UAAWF,EAAKE,WADxB,eAEEF,MAEXb,EAAYW,IA6DJK,aA1DW,WACnB,IAAIC,EAAWlB,EAASmB,QAAO,SAACL,GAC9B,OAAQA,EAAKE,YAEff,EAAYiB,IAuDJE,QApDM,SAACC,GACf,IAAIC,EAAI,YAAOtB,GACfsB,EAAI,sBACCA,GADD,CAEF,CAAEd,GAAIL,EAAcW,KAAMO,EAAWL,UAAU,KAEjDf,EAAYqB,GACZlB,EAAgBD,EAAa,IA8CrBoB,QA3CM,SAACf,GACf,OAAOR,EAASwB,MAAK,SAAAV,GAAI,OAAIA,EAAKN,KAAOO,OAAOP,OA2CxCiB,WAxCS,SAACjB,EAAIa,GACpB,IAAIT,EAASZ,EAASa,KAAI,SAACC,GACzB,OAAOA,EAAKN,KAAOO,OAAOP,GAAnB,2BACEM,GADF,IACQA,KAAMO,EAAWL,UAAU,IADnC,eAEEF,MAEXb,EAAYW,IAmCNc,WAhCS,SAAClB,GAClB,IAAImB,EAAgB3B,EAASmB,QAAO,SAAAL,GAAI,OAAIA,EAAKN,KAAOA,KACxDP,EAAY0B,KAiBV,SAeKlC,EAAMmC,YCzEJC,G,OARA,WACX,OACI,wBAAQC,UAAW,SAAnB,SACI,4D,kBCuBGC,G,OArBF,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,KAAMrB,EAA8B,EAA9BA,aAAcsB,EAAgB,EAAhBA,UACvB1B,EAAc2B,qBAAW7C,GAAzBkB,UAOR,OACI,sBAAKuB,UAAU,aAAf,UACI,qBAAKtB,GAAIwB,EAAKxB,GAA+B2B,KAAK,OAAO7B,MAAO0B,EAAKxB,GAAI4B,QAP7D,SAACC,GACjBA,EAAEC,iBACF3B,EAAa0B,EAAEE,cAAc/B,KAKsEsB,UAAS,eAAUE,EAAKhB,SAAW,SAAW,IAA7I,SACKgB,EAAKlB,MADckB,EAAKxB,GAAKwB,EAAKlB,MAGvC,sBAAKgB,UAAU,UAAf,UACI,eAAC,IAAD,CAAMU,GAAE,gBAAWR,EAAKxB,IAAxB,UAA8B,cAACiC,EAAA,EAAD,CAAcX,UAAW,OAAQY,MAAO,SAAtE,OACA,cAACC,EAAA,EAAD,CAAgBb,UAAU,SAASM,QAAS,kBAAM7B,EAAUyB,EAAKxB,YANxCyB,K,QCS1BW,EApBE,WACb,MAAiDV,qBAAW7C,GAApDW,EAAR,EAAQA,SAAUW,EAAlB,EAAkBA,aAAcM,EAAhC,EAAgCA,aAC1B4B,EAAiC,IAApB7C,EAASE,SAAiBF,EAAS8C,MAAK,SAAAC,GAAI,OAAsB,IAAlBA,EAAK/B,YACxE,OACI,sBAAKc,UAAW,OAAhB,UACK9B,EAASa,KAAI,SAACmB,EAAMgB,GACjB,OACI,cAAC,IAAMC,SAAP,UACI,cAAC,EAAD,CAAMhB,UAAS,eAAUe,GAAShB,KAAMA,EAAMrB,aAAcA,EAAcM,aAAcA,KADvE+B,MAK7B,sBAAKlB,UAAU,aAAf,UACI,cAAC,IAAD,CAAQoB,SAAWL,EAAaf,UAAU,MAAMqB,KAAM,SAAUf,QAASnB,EAAzE,6BACA,eAAC,IAAD,CAAMuB,GAAE,QAAR,cAA6B,cAAC,IAAD,CAAQV,UAAU,MAAMqB,KAAM,UAA9B,0BAA7B,MAAwB,U,iBC6CzBC,G,OA3DE,WACb,MAAyClB,qBAAW7C,GAA5C+B,EAAR,EAAQA,QAASG,EAAjB,EAAiBA,QAASE,EAA1B,EAA0BA,WAC1B,EAAoC/B,mBAAS,IAA7C,mBAAQ2B,EAAR,KAAmBgC,EAAnB,KACQC,EAAWC,cAAXD,OACJE,EAAUC,cAMdC,qBAAU,WACN,GAAGJ,EAAO,CACN,IAAIxC,EAAOS,EAAQ+B,GACnBD,EAAavC,EAAKA,SAEvB,CAACwC,IAEJ,IAUMK,EAAQ,WACVN,EAAa,IACbG,EAAQI,KAAK,MAGXC,EAAe,SAACxB,GAClBA,EAAEC,iBACGjB,EACDiC,GAZJ7B,EAAW6B,EAAQjC,GACnBsC,MANAvC,EAAQC,GACRsC,KAmBAG,KAGEA,EAAQ,WACVC,IAAQD,MAAM,6BAGlB,OACI,qBAAKhC,UAAU,YAAf,SACI,uBAAMkC,SAAUH,EAAhB,UACI,cAAC,IAAD,CAAOvD,MAAOe,EAAW8B,KAAK,OAAOc,SA1C5B,SAAC5B,GAClBgB,EAAahB,EAAEE,cAAcjC,QAyCwC4D,YAAY,kBACzE,sBAAKpC,UAAU,UAAf,UACI,eAAC,IAAD,CAAMU,GAAE,IAAR,cAAyB,cAAC,IAAD,CAAQV,UAAU,MAAMqB,KAAM,UAA9B,kBAAzB,MAAoB,GACpB,cAAC,IAAD,CAAQA,KAAK,UAAUrB,UAAU,MAAMM,QAASyB,EAAhD,8BCXLM,MAjCf,WAEE,MAA6EjC,qBAAW7C,GAAhFM,EAAR,EAAQA,eAAgBc,EAAxB,EAAwBA,SAAUC,EAAlC,EAAkCA,aAAcgB,EAAhD,EAAgDA,WAAY7B,EAA5D,EAA4DA,aAO5D,OACE,sBAAKiC,UAAU,MAAf,UACE,eAAC,IAAD,CAAQsC,SAAUC,wBAAlB,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,gBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,QAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,YAIR,eAAC,IAAD,CAAOC,QAAS5E,EAAgB6E,KAAM,kBAnBtC9C,EAmBqD7B,QAlBrDY,KAkBoEgE,SAAU/D,EAA9E,UACM,cAACgE,EAAA,EAAD,CAA2BC,MAvBjB,CAAEC,SAAU,OAAQC,MAAO,MAAOC,YAAa,UAwBzD,0EC7BKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCEdQ,IAASC,OACP,cAAC,EAAD,UACM,cAAC,EAAD,MAENC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.9217fdbd.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n//mock data\r\nimport data from \"../data.json\";\r\nconst ToDoContext = React.createContext();\r\n\r\nconst ToDoProvider = (props) => {\r\n\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [taskDeleteId, setTaskDeleteId] = useState(null);\r\n    const [toDoList, setToDoList] = useState(data);\r\n    const [currentIndex, setCurrentIndex] = useState(toDoList.length+1);\r\n\r\n    const handleToggle = (id) => {\r\n      let mapped = toDoList.map((task) => {\r\n        return task.id === Number(id)\r\n          ? { ...task, complete: !task.complete }\r\n          : { ...task };\r\n      });\r\n      setToDoList(mapped);\r\n    };\r\n  \r\n    const handleFilter = () => {\r\n      let filtered = toDoList.filter((task) => {\r\n        return !task.complete;\r\n      });\r\n      setToDoList(filtered);\r\n    };\r\n  \r\n    const addTask = (userInput) => {\r\n      let copy = [...toDoList];\r\n      copy = [\r\n        ...copy,\r\n        { id: currentIndex, task: userInput, complete: false },\r\n      ];\r\n      setToDoList(copy);\r\n      setCurrentIndex(currentIndex+1);\r\n    };\r\n  \r\n    const getTask = (id) => {\r\n      return toDoList.find(task => task.id === Number(id));\r\n    }\r\n  \r\n    const updateTask = (id, userInput) => {\r\n        let mapped = toDoList.map((task) => {\r\n          return task.id === Number(id)\r\n            ? { ...task, task: userInput, complete: false }\r\n            : { ...task };\r\n        });\r\n        setToDoList(mapped);\r\n    };\r\n  \r\n    const deleteTask = (id) => {\r\n      let remainingTask = toDoList.filter(task => task.id !== id);\r\n      setToDoList(remainingTask);\r\n    }\r\n\r\n    const showModal = (id) => {\r\n      setTaskDeleteId(id)\r\n      setIsModalVisible(true);\r\n    };\r\n  \r\n    const handleOk = () => {\r\n      setIsModalVisible(false);\r\n    };\r\n  \r\n    const handleCancel = () => {\r\n      setIsModalVisible(false);\r\n    };\r\n\r\n    return (\r\n        <ToDoContext.Provider\r\n          value={{\r\n              isModalVisible: isModalVisible,\r\n              toDoList: toDoList,\r\n              taskDeleteId: taskDeleteId,\r\n              showModal: showModal,\r\n              handleOk: handleOk,\r\n              handleCancel: handleCancel,\r\n              handleToggle: handleToggle,\r\n              handleFilter: handleFilter,\r\n              addTask: addTask,\r\n              getTask: getTask,\r\n              updateTask: updateTask,\r\n              deleteTask: deleteTask\r\n          }}>\r\n            {props.children}\r\n        </ToDoContext.Provider>\r\n    )\r\n}\r\n\r\nexport { ToDoContext };\r\n\r\nexport default ToDoProvider;","import React from 'react';\r\n\r\nimport '../scss/home.scss';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className={'header'}>\r\n            <h1>To Do List Application</h1>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React, { useContext } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { EditOutlined, DeleteOutlined }  from '@ant-design/icons';\r\n\r\nimport '../scss/todo-list.scss';\r\n\r\nimport { ToDoContext } from '../context/ToDoContext';\r\n\r\nconst ToDo = ({todo, handleToggle, uniqueKey }) => {\r\n    const { showModal } = useContext(ToDoContext);\r\n\r\n    const handleClick = (e) => {\r\n        e.preventDefault()\r\n        handleToggle(e.currentTarget.id)\r\n    }\r\n\r\n    return (\r\n        <div className=\"list-items\" key={uniqueKey}>\r\n            <div id={todo.id}  key={todo.id + todo.task} name=\"todo\" value={todo.id} onClick={handleClick} className={`todo ${todo.complete ? 'strike' : ''}`}>\r\n                {todo.task}\r\n            </div>\r\n            <div className=\"actions\">\r\n                <Link to={`/task/${todo.id}`}><EditOutlined className={'edit'} title={\"edit\"} /> </Link>\r\n                <DeleteOutlined className=\"delete\" onClick={() => showModal(todo.id)} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ToDo;","import React, { useContext } from 'react';\r\nimport ToDo from './ToDo';\r\nimport { ToDoContext } from '../context/ToDoContext';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'antd';\r\n\r\nconst ToDoList = () => {\r\n    const { toDoList, handleToggle, handleFilter } = useContext(ToDoContext);\r\n    const isDisabled = toDoList.length === 0 || !toDoList.some(item => item.complete === true);\r\n    return (\r\n        <div className={'list'}>\r\n            {toDoList.map((todo, index) => {\r\n                return (\r\n                    <React.Fragment key={index}>\r\n                        <ToDo uniqueKey={`todo-${index}`} todo={todo} handleToggle={handleToggle} handleFilter={handleFilter} />\r\n                    </React.Fragment>\r\n                )\r\n            })}\r\n            <div className=\"list-items\">\r\n                <Button disabled={ isDisabled } className=\"btn\" type={\"danger\"} onClick={handleFilter}>Clear Completed</Button>\r\n                <Link to={`/task`} key={1} > <Button className=\"btn\" type={\"primary\"}>Add New Task</Button> </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ToDoList;","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Input, Button, message } from 'antd';\r\nimport { useParams, useHistory, Link } from 'react-router-dom'\r\n\r\nimport '../scss/form.scss';\r\nimport { ToDoContext } from '../context/ToDoContext';\r\n\r\nconst ToDoForm = () => {\r\n    const { addTask, getTask, updateTask } = useContext(ToDoContext);\r\n    const [ userInput, setUserInput ] = useState('');\r\n    const { handle } = useParams();\r\n    let history = useHistory();\r\n\r\n    const handleChange = (e) => {\r\n        setUserInput(e.currentTarget.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(handle){\r\n            let task = getTask(handle);\r\n            setUserInput(task.task);\r\n        }\r\n    }, [handle])\r\n\r\n    const addNewTask = () => {\r\n        addTask(userInput);\r\n        reset();\r\n    }\r\n\r\n    const editTask = () => {\r\n        updateTask(handle, userInput);\r\n        reset();\r\n    }\r\n\r\n    const reset = () => {\r\n        setUserInput(\"\");\r\n        history.push(\"/\");\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(!!userInput){\r\n            handle ?  editTask() : addNewTask();\r\n            return\r\n        }\r\n        error()\r\n    }\r\n\r\n    const error = () => {\r\n        message.error('Task should not be empty');\r\n    };\r\n\r\n    return (\r\n        <div className=\"form-wrap\">\r\n            <form onSubmit={handleSubmit}>\r\n                <Input value={userInput} type=\"text\" onChange={handleChange} placeholder=\"Enter task...\"/>\r\n                <div className=\"actions\">\r\n                    <Link to={`/`} key={1} > <Button className=\"btn\" type={\"default\"}>Back</Button> </Link>\r\n                    <Button type=\"primary\" className=\"btn\" onClick={handleSubmit}>Submit</Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default ToDoForm;","import React, { useContext } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n//Third party components \nimport { Modal } from 'antd';\nimport { ExclamationCircleOutlined }  from '@ant-design/icons';\n\n//Context\nimport { ToDoContext } from '../context/ToDoContext';\n\n//components\nimport Header from \"./Header\";\nimport ToDoList from \"./ToDoList\";\nimport ToDoForm from \"./ToDoForm\";\n\nfunction App() {\n  \n  const { isModalVisible, handleOk, handleCancel, deleteTask, taskDeleteId } = useContext(ToDoContext);\n  const iconStyle = { fontSize: '16px', color: 'red', marginRight: '10px' };\n\n  const onDelete = (id) => {\n    deleteTask(id);\n    handleOk()\n}\n  return (\n    <div className=\"App\">\n      <Router basename={process.env.PUBLIC_URL}>\n        <Header />\n        <Switch>\n          <Route path=\"/task/:handle\">\n            <ToDoForm/>\n          </Route>\n          <Route path=\"/task\">\n            <ToDoForm/>\n          </Route>\n          <Route path=\"/\">\n            <ToDoList/>\n          </Route>\n        </Switch>\n      </Router>\n    <Modal visible={isModalVisible} onOk={() => onDelete(taskDeleteId)} onCancel={handleCancel}>\n          <ExclamationCircleOutlined style={iconStyle}/>\n          <span>Do you want to delete the task?</span>\n      </Modal>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css';\n\nimport ToDoProvider from '../src/context/ToDoContext'\n\nReactDOM.render(\n  <ToDoProvider>\n        <App />\n  </ToDoProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}